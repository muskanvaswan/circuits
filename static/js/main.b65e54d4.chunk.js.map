{"version":3,"sources":["operations/parallel.js","operations/parallel_current.js","operations/series_voltage.js","operations/series.js","components/Calculate.js","components/Multiple.js","components/App.js","index.js"],"names":["parallel","l","b","map","parseFloat","length","slice","parallel_current","i","r","v","x","series_voltage","series","reduce","a","Calculate","props","dragStartAnswer","e","ans","state","answer","dataTransfer","setData","dragStartResistor","target","value","dropHandler","preventDefault","handleDrop","val","getData","setState","resistances","name","handleChange","handleCurrent","current","voltage","type","currentCalculate","currents","handleVoltage","voltageCalculate","voltages","deleteResistor","event","index","dataset","splice","calculate","addResistor","handleSelect","parseInt","handleToggle","toggle","className","this","resistance","htmlFor","draggable","onDragStart","onChange","onDragOver","onDrop","data-index","onClick","c","for","React","Component","Multiple","addCalculate","count","calculates","deleteCalculate","j","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b65e54d4.chunk.js","sourcesContent":["export default function parallel(l){\n  l = l.map(parseFloat)\n  var ans, nl = [], b;\n  if (l.length === 2){\n    ans = (l[0]*l[1])/ (l[0] + l[1]);\n    return ans;\n  }\n  nl = l.slice(1, );\n  b = parallel(nl);\n  return (l[0]*b/ (l[0] + b));\n}\n","export default function parallel_current(i, l, r){\n  var v;\n  v = i*r;\n  var nl = l.map((x) =>  v/ x);\n  return nl;\n}\n","export default function series_voltage(v, l, r){\n  var i;\n  i = v/r;\n  var nl = l.map((x) =>  i* x);\n  return nl;\n}\n","export default function series(l){\n  l = l.map(parseFloat);\n  return l.reduce((a, b) => a + b, 0);\n}\n","import React from \"react\";\nimport parallel from './../operations/parallel.js'\nimport parallel_current from './../operations/parallel_current.js'\nimport series_voltage from './../operations/series_voltage.js'\n\n\nimport series from './../operations/series.js'\n// Current from './Current';\n\n\n\nexport default class Calculate extends React.Component {\n  constructor(props){\n    super(props);\n    var i = parallel_current(0, [0,0,], 0);\n    this.state = {\n      \"resistances\": [0,0,],\n      \"type\": \"p\",\n      \"answer\":0,\n      \"currents\": i,\n      \"current\": 0,\n      \"volatge\": 0,\n      \"voltages\": i,\n      \"toggle\": true,\n    };\n  }\n\n\trender() {\n\t\treturn (\n      <div className=\"row container border border-info p-3 rounded m-0\">\n        <div className=\"col-md-10\">\n          <div className=\"row\">\n            <div className=\"col-md-8 row\">\n              {this.state.resistances.map((resistance, i) =>\n                <div className=\"col-md-6 my-1\">\n                  <div key={i} className=\" d-flex border rounded bg-light w-100\">\n                    <label htmlFor={i}  className=\"my-auto mx-1\">R{i+1}</label>\n                    <input name={i} value={resistance} draggable onDragStart={this.dragStartResistor} onChange={this.handleChange} onDragOver={this.dropHandler} onDrop={this.handleDrop} className=\"form-control\"></input>\n                    <button data-index={i} onClick={this.deleteResistor} className=\"btn btn-danger\">-</button>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"col-md-4 my-1\">\n            <div className=\"form-group\">\n              <select value={this.state.type} name=\"type\" onChange={this.handleSelect} className=\"form-control\">\n                <option value=\"s\">Series</option>\n                <option value=\"p\">parallel</option>\n              </select>\n            </div>\n            </div>\n          </div>\n\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <button onClick={this.addResistor} className=\"btn btn-primary my-1 w-100\">+ Add Resistor</button>\n            </div>\n            <div className=\"col-md-6\">\n              <button onClick={this.calculate} className=\"btn btn-success my-1 w-100\"> Recalculate</button>\n            </div>\n          </div>\n          <div className=\"m-2 mt-4 d-flex\">\n            <p onClick={this.handleToggle} className=\" text-primary text-center w-100 mx-auto\">\n              {this.state.toggle===false? \"Hide \" : \"View \" }\n              {this.state.type===\"p\"? \"Current Division\" : \"Volatge Division\" }\n            </p>\n          </div>\n\n        </div>\n        <div draggable onDragStart={this.dragStartAnswer} className=\"col-md-2 border rounded p-4 d-flex bg-light overflow-auto\">\n          <h2   className=\"mx-auto\">{this.state.answer}</h2>\n        </div>\n        {/*<!-- currrent division -->*/}\n        {this.state.type===\"p\" && <div className=\"container-fluid\">\n          <div className={this.state.toggle===false? null : \"collapse\" }>\n            <div className=\"row my-2\">\n\n              <div className=\"d-flex form-group col-md-3 my-3 bg-light rounded input-group mr-1\">\n                <label className=\"my-auto mx-1\" htmlFor=\"current\">Total Current</label>\n                <input name=\"current\" onChange={this.handleCurrent} value={this.state.current} draggable  className=\"form-control p-2 my-auto\"></input>\n              </div>\n              <div className=\"d-flex form-group col-md-3 my-3 bg-light rounded input-group mr-1\">\n                <label className=\"my-auto mx-1\" htmlFor=\"current\">Voltage</label>\n                <input name=\"voltage\" onChange={this.handleVoltage} value={this.state.voltage} draggable  className=\"form-control p-2 my-auto\"></input>\n              </div>\n              {this.state.currents.map((c, i) =>\n                <div className=\"col-md my-3\" key={i}>\n                  <div className=\" border rounded p-1 d-flex bg-light overflow-auto\">\n                    <p className=\"text-muted\">I{i+1}</p>\n                    <h2   className=\"m-auto \">{c}</h2>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>}\n        {/*<!-- end currrent division -->*/}\n        {/*<!-- volatge division -->*/}\n        {this.state.type===\"s\" && <div className=\"container-fluid\">\n          <div className={this.state.toggle===false? null : \"collapse\" }>\n            <div className=\"row my-2\">\n\n              <div className=\"d-flex form-group col-md-3 my-3 bg-light rounded input-group mr-1\">\n                <label className=\"my-auto mx-1\" for=\"voltage\">Total Volatge</label>\n                <input name=\"volatge\" onChange={this.handleVoltage} value={this.state.voltage} draggable  className=\"form-control p-2 my-auto\"></input>\n              </div>\n              <div className=\"d-flex form-group col-md-3 my-3 bg-light rounded input-group mr-1\">\n                <label className=\"my-auto mx-1\" for=\"current2\">Current</label>\n                <input name=\"current2\" onChange={this.handleCurrent} value={this.state.current} draggable  className=\"form-control p-2 my-auto\"></input>\n              </div>\n\n              {this.state.voltages.map((c, i) =>\n                <div className=\"col-md my-3\" key={i}>\n                  <div className=\" border rounded p-1 d-flex bg-light overflow-auto\">\n                    <p className=\"text-muted\">V{i+1}</p>\n                    <h2   className=\"m-auto \">{c}</h2>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>}\n        {/*<!-- end voltage division -->*/}\n      </div>\n    );\n\t}\n\n  //drag start function for equivalent resistance\n  dragStartAnswer = (e) => {\n    var ans = this.state.answer;\n    e.dataTransfer.setData('val', ans)\n  }\n\n  //drag start function for input resistance\n  dragStartResistor = (e) => {\n    var r = e.target.value;\n    e.dataTransfer.setData('val', r)\n  }\n\n  //generic drop handler\n  dropHandler = (e) =>{\n    e.preventDefault();\n  }\n\n  //changing input resistance value after drop\n  handleDrop = (e) => {\n    var val = e.dataTransfer.getData('val');\n    this.setState(state => {\n      var l = state.resistances\n      l.[e.target.name]= val\n      return{resistances: l};\n\n    });\n    this.handleChange(e);\n\n  }\n\n  //updating state after current input\n  handleCurrent = (e) =>{\n    this.setState({\n      current: e.target.value,\n      voltage: e.target.value * this.state.answer\n    });\n    if (this.state.type===\"p\"){\n      this.currentCalculate();\n    }\n  }\n\n  //updating state of currents and performing current division calculations\n  currentCalculate = () => {\n    this.setState(state => ({\n      currents: parallel_current(state.current, state.resistances, state.answer),\n    }))\n  }\n\n  //updating state after volatge input\n  handleVoltage = (e) =>{\n    this.setState({\n      voltage: e.target.value,\n      current: e.target.value / this.state.answer\n    });\n    if (this.state.type ===\"s\"){\n      this.voltageCalculate();\n    }\n  }\n\n  //updating state of voltages and performing voltage division calculations\n  voltageCalculate = () => {\n    this.setState(state => ({\n      voltages: series_voltage(state.voltage, state.resistances, state.answer),\n    }));\n  }\n\n  //fucntion to handle the deleting a resistor\n  deleteResistor = (event) => {\n    const index = event.target.dataset.index\n    this.setState(state => {\n      var l = state.resistances\n      l.splice(index, 1)\n      return{resistances: l};\n\n    }, this.calculate)\n  }\n\n  //fucntion to handle the adding a resistor\n  addResistor = () => {\n    this.setState(state => ({\n      resistances: [...state.resistances, 0]\n    }))\n  }\n\n  //fucntion to handle changing from parallel to series\n  handleSelect = (event) => {\n    this.setState({\n      type: event.target.value\n    }, this.calculate)\n  }\n\n  //fucntion to handle change in input resistance\n  handleChange = (event) => {\n    var index = parseInt(event.target.name)\n    var l = this.state.resistances\n    l[index] = event.target.value\n    this.setState({\n      resistances: l\n    })\n    this.calculate();\n  }\n\n  //function that handles main calculations\n  calculate = () =>{\n    if (this.state.type === \"p\"){\n      this.setState(state => ({\n        answer: parallel(state.resistances),\n        voltage: state.current*parallel(state.resistances)\n      }));\n      this.currentCalculate();\n\n    }\n    else{\n      this.setState(state => ({\n        answer: series(state.resistances),\n        current: state.voltage/series(state.resistances)\n      }));\n      this.voltageCalculate()\n\n    }\n  }\n\n  //funtion to toggle current/voltage division\n  handleToggle = () => {\n    this.setState(state => ({toggle: !state.toggle}))\n  }\n\n\n}\n","import React from \"react\";\nimport Calculate from './Calculate';\n\nexport default class Multiple extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      \"calculates\": [],\n      \"count\": 0\n    };\n  }\n\n\trender() {\n\t\treturn (\n            <div>\n              <div className=\" w-100\">\n                <div key=\"0\">\n                  < Calculate />\n                </div>\n              {this.state.calculates.map((i, j) =>\n                <div key={i} className=\"my-4 row\">\n                  <div className=\"col-md-11\">\n                    < Calculate />\n                  </div>\n                  <div className=\"col-md-1\">\n                    <button data-index={j} onClick={this.deleteCalculate} className=\"btn btn-danger w-100 h-100 text-center\">-</button>\n                  </div>\n                </div>\n              )}\n              </div>\n            <div className=\"form-group m-2\">\n              <button  onClick={this.addCalculate} className=\"btn btn-primary w-100\">+ Add Another Connection</button>\n            </div>\n\n            </div>\n\t\t);\n\t}\n\n  addCalculate = () => {\n    this.setState(state => ({\n      count: state.count+1,\n      calculates: [...state.calculates, state.count+1]\n    }))\n  }\n\n  deleteCalculate = (e) => {\n    var index = e.target.dataset.index;\n    this.setState(state => {\n      var l = state.calculates\n      l.splice(index, 1);\n      //var nl = [...l.slice(0,index) , ...l.slice(index,).map((x) =>  x-1)]\n\n      return {\n        calculates: l,\n        //count: state.count-1\n      }\n    })\n\n  }\n\n\n}\n","//import logo from './logo.svg';\nimport React from \"react\";\nimport './App.css';\nimport Multiple from './Multiple';\n\n\nexport default class App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4 className=\"text-white\">Circuit Calculator</h4>\n\t\t\t\t<p className=\"text-white\">You can add another set of resistances with the add connection button. You can drag and drop your resistances from one connection to other and basically to any input box. Don't be scared if a \"NaN\" appears, it just means the answer is Not a Number and that you're going to die. Rest is self explanatory. You're welcome..</p>\n\t\t\t\t< Multiple />\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n//import \"github-fork-ribbon-css/gh-fork-ribbon.css\";\n\nReactDOM.render( < App / > , document.getElementById(\"root\"));"],"sourceRoot":""}